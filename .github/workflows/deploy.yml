name: Deploy

on:
  push:
    branches:
      - master
    paths:
      - 'Fracker/Supporting/Info.plist'

jobs:
  deploy:
    name: Deploy
    runs-on: macos-12
    steps:
      - name: Checkout repository
        uses: actions/checkout@v1
      - name: Configure ssh
        uses: webfactory/ssh-agent@v0.5.4
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}
      - name: Install the Apple certificate and provisioning profile
        env:
          BUILD_CERTIFICATE_BASE64: ${{ secrets.BUILD_CERTIFICATE_BASE64 }}
          EXPORT_CERTIFICATE_BASE64: ${{ secrets.EXPORT_CERTIFICATE_BASE64 }}
          P12_PASSWORD: ${{ secrets.P12_PASSWORD }}
          BUILD_PROVISION_PROFILE_BASE64: ${{ secrets.BUILD_PROVISION_PROFILE_BASE64 }}
          EXPORT_PROVISION_PROFILE_BASE64: ${{ secrets.EXPORT_PROVISION_PROFILE_BASE64 }}
          KEYCHAIN_PASSWORD: ${{ secrets.KEYCHAIN_PASSWORD }}
        run: |
          # create variables
          BUILD_CERTIFICATE_PATH=$RUNNER_TEMP/development.p12
          EXPORT_CERTIFICATE_PATH=$RUNNER_TEMP/ios_distribution.p12
          BUILD_PP_PATH=$RUNNER_TEMP/Development.mobileprovision
          EXPORT_PP_PATH=$RUNNER_TEMP/Production.mobileprovision
          KEYCHAIN_PATH=$RUNNER_TEMP/app-signing.keychain-db

          # import certificate and provisioning profile from secrets
          echo -n "$BUILD_CERTIFICATE_BASE64" | base64 --decode --output $BUILD_CERTIFICATE_PATH
          echo -n "$BUILD_PROVISION_PROFILE_BASE64" | base64 --decode --output $BUILD_PP_PATH

          echo -n "$EXPORT_CERTIFICATE_BASE64" | base64 --decode --output $EXPORT_CERTIFICATE_PATH
          echo -n "$EXPORT_PROVISION_PROFILE_BASE64" | base64 --decode --output $EXPORT_PP_PATH

          # create temporary keychain
          security create-keychain -p "$KEYCHAIN_PASSWORD" $KEYCHAIN_PATH
          security set-keychain-settings -lut 21600 $KEYCHAIN_PATH
          security unlock-keychain -p "$KEYCHAIN_PASSWORD" $KEYCHAIN_PATH

          # import certificate to keychain
          security import $BUILD_CERTIFICATE_PATH -P "$P12_PASSWORD" -A -t cert -f pkcs12 -k $KEYCHAIN_PATH
          security import $EXPORT_CERTIFICATE_PATH -P "$P12_PASSWORD" -A -t cert -f pkcs12 -k $KEYCHAIN_PATH
          security list-keychain -d user -s $KEYCHAIN_PATH

          # apply provisioning profile
          mkdir -p ~/Library/MobileDevice/Provisioning\ Profiles
          cp $BUILD_PP_PATH ~/Library/MobileDevice/Provisioning\ Profiles
          cp $EXPORT_PP_PATH ~/Library/MobileDevice/Provisioning\ Profiles
      - name: Archive
        run: xcodebuild -scheme "Fracker" clean archive -archivePath $RUNNER_TEMP/build/Fracker.xcarchive -configuration "Release" -sdk "iphoneos" | xcpretty
      - name: Export
        env:
          EXPORT_PLIST: ${{ secrets.IOS_EXPORT_PRODUCTION }}
        run: |
          EXPORT_PLIST_PATH=$RUNNER_TEMP/ExportOptions.plist
          echo -n "$EXPORT_PLIST" | base64 --decode --output $EXPORT_PLIST_PATH
          xcodebuild -exportArchive -archivePath $RUNNER_TEMP/build/Fracker.xcarchive -exportOptionsPlist $EXPORT_PLIST_PATH -exportPath $RUNNER_TEMP/export | xcpretty
      - name: Decode auth api key
        env:
          API_KEY_BASE64: ${{ secrets.APPSTORE_API_PRIVATE_KEY }}
        run: |
          mkdir ~/private_keys
          echo -n "$API_KEY_BASE64" | base64 --decode --output ~/private_keys/AuthKey_${{ secrets.APPSTORE_API_KEY_ID }}.p8
      - name: Upload to App Store Connect
        run: |
          xcrun altool --validate-app -f $RUNNER_TEMP/export/Fracker.ipa -t ios --apiKey ${{ secrets.APPSTORE_API_KEY_ID }} --apiIssuer ${{ secrets.APPSTORE_ISSUER_ID }} | xcpretty
          xcrun altool --upload-app -f $RUNNER_TEMP/export/Fracker.ipa -t ios --apiKey ${{ secrets.APPSTORE_API_KEY_ID }} --apiIssuer ${{ secrets.APPSTORE_ISSUER_ID }} | xcpretty
